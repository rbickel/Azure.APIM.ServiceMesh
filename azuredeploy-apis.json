{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
     "apiMInstanceName": {
      "type": "string",
      "defaultValue": "DevOps-APIM",
      "metadata": {
        "description": "API Management instance name"
      }
    },
    "apiBackendUrl": {
      "type": "string",
      "defaultValue": "https://devops-serverlessavailabilitytest-app.azurewebsites.net/api",
      "metadata": {
        "description": "API Backend Url"
      }
    },
    "backendCode": {
      "type": "string",
      "defaultValue": "BDk9zLmGrPyXAggQ3oWx3PQvkDBlIbSn72yz/XrcLUkG3G7gD0wd9g==",
      "metadata": {
        "description": "API Backend Key"
      }
    }
  },
  "variables": {
    "apiManagementServiceName": "[parameters('apiMInstanceName')]"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "name": "[concat(variables('apiManagementServiceName'), '/api')]",
      "dependsOn": [
      ],
      "properties": {
          "displayName": "API",
          "apiRevision": "1",
          "subscriptionRequired": false,
          "serviceUrl": "[parameters('apiBackendUrl')]",
          "protocols": [
              "https"
          ],
          "isCurrent": true,
          "path": "/API"
      }
    },
    {
        "type": "Microsoft.ApiManagement/service/properties",
        "apiVersion": "2019-01-01",
        "name": "[concat(variables('apiManagementServiceName'), '/code')]",
        "dependsOn": [
        ],
        "properties": {
            "displayName": "code",
            "value": "[parameters('backendCode')]",
            "secret": true
        }
    },
    {
        "type": "Microsoft.ApiManagement/service/apis/policies",
        "apiVersion": "2019-01-01",
        "name": "[concat(variables('apiManagementServiceName'), '/api/policy')]",
        "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'api')]",
            "[resourceId('Microsoft.ApiManagement/service/properties', variables('apiManagementServiceName'), 'code')]"
        ],
        "properties": {
            "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-query-parameter name=\"code\" exists-action=\"override\">\r\n      <value>{{code}}</value>\r\n    </set-query-parameter>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
            "format": "xml"
        }
    },
    {
        "type": "Microsoft.ApiManagement/service/properties",
        "apiVersion": "2019-01-01",
        "name": "[concat(variables('apiManagementServiceName'), '/endpoint')]",
        "dependsOn": [
        ],
        "properties": {
            "displayName": "endpoint",
            "value": "[parameters('apiBackendUrl')]",
            "secret": false
        }
    },
    {
        "type": "Microsoft.ApiManagement/service/apis/operations",
        "apiVersion": "2019-01-01",
        "name": "[concat(variables('apiManagementServiceName'), '/api/Ping')]",
        "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'api')]"
        ],
        "properties": {
            "displayName": "Ping",
            "method": "GET",
            "urlTemplate": "/ping",
            "templateParameters": [],
            "responses": []
        }
    }
  ],
  "outputs": {
    "ServiceUrl":{
        "type":"string",
        "value":"[reference(resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'api'),'2019-01-01').serviceUrl]"
    }
  }
}
